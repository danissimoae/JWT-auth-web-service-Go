package handlers

import (
	"Architecture_Laba_2/internal/models"
	jwtware "github.com/gofiber/contrib/jwt"
	"github.com/gofiber/fiber/v2"
)

// SetupHandlers –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤
func SetupHandlers(app *fiber.App, authHandler *AuthHandler, userHandler *UserHandler) {
	// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ login
	app.Get("/login", func(c *fiber.Ctx) error {
		return c.Render("login", nil)
	})

	// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ register
	app.Get("/register", func(c *fiber.Ctx) error {
		return c.Render("register", nil)
	})

	// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ index
	app.Get("/", func(c *fiber.Ctx) error {
		return c.Render("index",
			fiber.Map{
				"Title": "–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π, –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å! üëã",
				"Description": "–≠—Ç–æ –≤–µ–±-—Å–µ—Ä–≤–∏—Å —Å JWT-–∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–µ–π ‚ú®, " +
					"JWT (JSON Web Token) ‚Äî —ç—Ç–æ –æ—Ç–∫—Ä—ã—Ç—ã–π —Å—Ç–∞–Ω–¥–∞—Ä—Ç –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è —Ç–æ–∫–µ–Ω–æ–≤ –¥–æ—Å—Ç—É–ø–∞," +
					" –æ—Å–Ω–æ–≤–∞–Ω–Ω—ã–π –Ω–∞ —Ñ–æ—Ä–º–∞—Ç–µ JSON. –û–±—ã—á–Ω–æ –æ–Ω –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –¥–ª—è" +
					" –ø–µ—Ä–µ–¥–∞—á–∏ –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –≤" +
					" –∫–ª–∏–µ–Ω—Ç-—Å–µ—Ä–≤–µ—Ä–Ω—ã—Ö –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è—Ö. –¢–æ–∫–µ–Ω—ã —Å–æ–∑–¥–∞—é—Ç—Å—è —Å–µ—Ä–≤–µ—Ä–æ–º," +
					" –ø–æ–¥–ø–∏—Å—ã–≤–∞—é—Ç—Å—è —Å–µ–∫—Ä–µ—Ç–Ω—ã–º –∫–ª—é—á–æ–º –∏ –ø–µ—Ä–µ–¥–∞—é—Ç—Å—è —é–∑–µ—Ä—É, –∫–æ—Ç–æ—Ä—ã–π –≤" +
					" –¥–∞–ª—å–Ω–µ–π—à–µ–º –∏—Å–ø–æ–ª—å–∑—É–µ—Ç –∏—Ö –¥–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è —Å–≤–æ–µ–π –ª–∏—á–Ω–æ—Å—Ç–∏.",
			})
	})

	publicGroup := app.Group("")
	publicGroup.Post("/register", authHandler.Register)
	publicGroup.Post("/login", authHandler.Login)

	authorizedGroup := app.Group("")
	authorizedGroup.Use(jwtware.New(jwtware.Config{
		SigningKey: jwtware.SigningKey{
			Key: JwtSecretKey,
		},
		ContextKey: models.ContextKeyUser,
	}))
	authorizedGroup.Get("/profile", userHandler.Profile)
}
